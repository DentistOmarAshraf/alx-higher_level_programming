The ``2-matrix_divided.txt`` Module
===================================

Using ``matrix_divided``
------------------------

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Validate cases:
	>>> matrix = [
	...	[1, 2, 3],
	...	[4, 5, 6]
	...	]
	>>> print(matrix_divided(matrix, 3))
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

	>>> print(matrix_divided(matrix, 0))
	Traceback (most recent call last):
		...
	ZeroDivisionError: division by zero

	>>> print(matrix_divided("str", 4))
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> print(matrix_divided(matrix, "str"))
	Traceback (most recent call last):
		...
	TypeError: div must be a number

	>>> print(matrix_divided([0, 1, 2], 3))
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> print(matrix_divided([[0, 1, 2], [3, 4]], 5))
	Traceback (most recent call last):
		...
	TypeError: Each row of the matrix must have the same size

	>>> print(matrix_divided([[1, 2, "omar"], [2, 3, 4]], 4))
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> print(matrix)
	[[1, 2, 3], [4, 5, 6]]

	>>> print(matrix_divided([[4, 10],[6, 8]], 2))
	[[2.0, 5.0], [3.0, 4.0]]

	>>> print(matrix_divided([[]], 2))
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> print(matrix_divided(matrix))
	Traceback (most recent call last):
		...
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

	>>> print(matrix_divided(matrix, 2, 3))
	Traceback (most recent call last):
		...
	TypeError: matrix_divided() takes 2 positional arguments but 3 were given

	>>> print(matrix_divided())
	Traceback (most recent call last):
		...
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

	>>> print(matrix_divided([[10, 20]], 2))
	[[5.0, 10.0]]
